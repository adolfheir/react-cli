// source: device_manager.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.zhst.Camera', null, global);
goog.exportSymbol('proto.zhst.CreateVmsRequest', null, global);
goog.exportSymbol('proto.zhst.CreateVmsResponse', null, global);
goog.exportSymbol('proto.zhst.DeleteVmsRequest', null, global);
goog.exportSymbol('proto.zhst.DeteleVmsResponse', null, global);
goog.exportSymbol('proto.zhst.EditCameraInfoRequest', null, global);
goog.exportSymbol('proto.zhst.EditCameraInfoResponse', null, global);
goog.exportSymbol('proto.zhst.ListCameraAndDirRequest', null, global);
goog.exportSymbol('proto.zhst.ListCameraAndDirResponse', null, global);
goog.exportSymbol('proto.zhst.ListVmsPlatformRequest', null, global);
goog.exportSymbol('proto.zhst.ListVmsPlatformResponse', null, global);
goog.exportSymbol('proto.zhst.SearchCameraPathRequest', null, global);
goog.exportSymbol('proto.zhst.SearchCameraPathResponse', null, global);
goog.exportSymbol('proto.zhst.SearchCameraRequest', null, global);
goog.exportSymbol('proto.zhst.SearchCameraResponse', null, global);
goog.exportSymbol('proto.zhst.VmsPlatformInfo', null, global);
goog.exportSymbol('proto.zhst.Vmsdir', null, global);
goog.exportSymbol('proto.zhst.VmsdirNode', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.VmsPlatformInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.VmsPlatformInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.VmsPlatformInfo.displayName = 'proto.zhst.VmsPlatformInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.Camera = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.Camera, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.Camera.displayName = 'proto.zhst.Camera';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.Vmsdir = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.Vmsdir, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.Vmsdir.displayName = 'proto.zhst.Vmsdir';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ListCameraAndDirRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.ListCameraAndDirRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ListCameraAndDirRequest.displayName = 'proto.zhst.ListCameraAndDirRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ListCameraAndDirResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.ListCameraAndDirResponse.repeatedFields_, null);
};
goog.inherits(proto.zhst.ListCameraAndDirResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ListCameraAndDirResponse.displayName = 'proto.zhst.ListCameraAndDirResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.EditCameraInfoRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.EditCameraInfoRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.EditCameraInfoRequest.displayName = 'proto.zhst.EditCameraInfoRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.EditCameraInfoResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.EditCameraInfoResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.EditCameraInfoResponse.displayName = 'proto.zhst.EditCameraInfoResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchCameraRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.SearchCameraRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchCameraRequest.displayName = 'proto.zhst.SearchCameraRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchCameraResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.SearchCameraResponse.repeatedFields_, null);
};
goog.inherits(proto.zhst.SearchCameraResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchCameraResponse.displayName = 'proto.zhst.SearchCameraResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchCameraPathRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.SearchCameraPathRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchCameraPathRequest.displayName = 'proto.zhst.SearchCameraPathRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.VmsdirNode = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.VmsdirNode.repeatedFields_, null);
};
goog.inherits(proto.zhst.VmsdirNode, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.VmsdirNode.displayName = 'proto.zhst.VmsdirNode';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchCameraPathResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.SearchCameraPathResponse.repeatedFields_, null);
};
goog.inherits(proto.zhst.SearchCameraPathResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchCameraPathResponse.displayName = 'proto.zhst.SearchCameraPathResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ListVmsPlatformRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.ListVmsPlatformRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ListVmsPlatformRequest.displayName = 'proto.zhst.ListVmsPlatformRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ListVmsPlatformResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.ListVmsPlatformResponse.repeatedFields_, null);
};
goog.inherits(proto.zhst.ListVmsPlatformResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ListVmsPlatformResponse.displayName = 'proto.zhst.ListVmsPlatformResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.CreateVmsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.CreateVmsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.CreateVmsRequest.displayName = 'proto.zhst.CreateVmsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.CreateVmsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.CreateVmsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.CreateVmsResponse.displayName = 'proto.zhst.CreateVmsResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.DeleteVmsRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.DeleteVmsRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.DeleteVmsRequest.displayName = 'proto.zhst.DeleteVmsRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.DeteleVmsResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.DeteleVmsResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.DeteleVmsResponse.displayName = 'proto.zhst.DeteleVmsResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.VmsPlatformInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.VmsPlatformInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.VmsPlatformInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.VmsPlatformInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    platformName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    pluginName: jspb.Message.getFieldWithDefault(msg, 3, ""),
    ip: jspb.Message.getFieldWithDefault(msg, 4, ""),
    port: jspb.Message.getFieldWithDefault(msg, 5, 0),
    userName: jspb.Message.getFieldWithDefault(msg, 6, ""),
    password: jspb.Message.getFieldWithDefault(msg, 7, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.VmsPlatformInfo}
 */
proto.zhst.VmsPlatformInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.VmsPlatformInfo;
  return proto.zhst.VmsPlatformInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.VmsPlatformInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.VmsPlatformInfo}
 */
proto.zhst.VmsPlatformInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setPluginName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setPort(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserName(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPassword(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.VmsPlatformInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.VmsPlatformInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.VmsPlatformInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.VmsPlatformInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getPlatformName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPluginName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getPort();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = message.getUserName();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getPassword();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.zhst.VmsPlatformInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string platform_name = 2;
 * @return {string}
 */
proto.zhst.VmsPlatformInfo.prototype.getPlatformName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setPlatformName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string plugin_name = 3;
 * @return {string}
 */
proto.zhst.VmsPlatformInfo.prototype.getPluginName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setPluginName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string ip = 4;
 * @return {string}
 */
proto.zhst.VmsPlatformInfo.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setIp = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional int32 port = 5;
 * @return {number}
 */
proto.zhst.VmsPlatformInfo.prototype.getPort = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setPort = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional string user_name = 6;
 * @return {string}
 */
proto.zhst.VmsPlatformInfo.prototype.getUserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setUserName = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional string password = 7;
 * @return {string}
 */
proto.zhst.VmsPlatformInfo.prototype.getPassword = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.VmsPlatformInfo} returns this
 */
proto.zhst.VmsPlatformInfo.prototype.setPassword = function(value) {
  return jspb.Message.setProto3StringField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.Camera.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.Camera.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.Camera} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.Camera.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    uuid: jspb.Message.getFieldWithDefault(msg, 2, ""),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    type: jspb.Message.getFieldWithDefault(msg, 4, 0),
    details: jspb.Message.getFieldWithDefault(msg, 5, ""),
    vmsDirId: jspb.Message.getFieldWithDefault(msg, 6, ""),
    deviceVender: jspb.Message.getFieldWithDefault(msg, 7, 0),
    vmsPaltformId: jspb.Message.getFieldWithDefault(msg, 8, 0),
    vmsChannel: jspb.Message.getFieldWithDefault(msg, 9, ""),
    vmsCameraStatus: jspb.Message.getFieldWithDefault(msg, 10, 0),
    vmsCameraDecoderTag: jspb.Message.getFieldWithDefault(msg, 11, ""),
    longitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 12, 0.0),
    latitude: jspb.Message.getFloatingPointFieldWithDefault(msg, 13, 0.0),
    platformInfo: (f = msg.getPlatformInfo()) && proto.zhst.VmsPlatformInfo.toObject(includeInstance, f),
    extendInfo: jspb.Message.getFieldWithDefault(msg, 15, ""),
    rtspAddress: jspb.Message.getFieldWithDefault(msg, 16, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.Camera}
 */
proto.zhst.Camera.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.Camera;
  return proto.zhst.Camera.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.Camera} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.Camera}
 */
proto.zhst.Camera.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setUuid(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setType(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDetails(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmsDirId(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDeviceVender(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVmsPaltformId(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmsChannel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVmsCameraStatus(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmsCameraDecoderTag(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLongitude(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setLatitude(value);
      break;
    case 14:
      var value = new proto.zhst.VmsPlatformInfo;
      reader.readMessage(value,proto.zhst.VmsPlatformInfo.deserializeBinaryFromReader);
      msg.setPlatformInfo(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setExtendInfo(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRtspAddress(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.Camera.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.Camera.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.Camera} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.Camera.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getUuid();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getType();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getDetails();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getVmsDirId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
  f = message.getDeviceVender();
  if (f !== 0) {
    writer.writeInt32(
      7,
      f
    );
  }
  f = message.getVmsPaltformId();
  if (f !== 0) {
    writer.writeInt32(
      8,
      f
    );
  }
  f = message.getVmsChannel();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getVmsCameraStatus();
  if (f !== 0) {
    writer.writeInt32(
      10,
      f
    );
  }
  f = message.getVmsCameraDecoderTag();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getLongitude();
  if (f !== 0.0) {
    writer.writeDouble(
      12,
      f
    );
  }
  f = message.getLatitude();
  if (f !== 0.0) {
    writer.writeDouble(
      13,
      f
    );
  }
  f = message.getPlatformInfo();
  if (f != null) {
    writer.writeMessage(
      14,
      f,
      proto.zhst.VmsPlatformInfo.serializeBinaryToWriter
    );
  }
  f = message.getExtendInfo();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
  f = message.getRtspAddress();
  if (f.length > 0) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional int32 id = 1;
 * @return {number}
 */
proto.zhst.Camera.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string uuid = 2;
 * @return {string}
 */
proto.zhst.Camera.prototype.getUuid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setUuid = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.zhst.Camera.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional int32 type = 4;
 * @return {number}
 */
proto.zhst.Camera.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setType = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string details = 5;
 * @return {string}
 */
proto.zhst.Camera.prototype.getDetails = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setDetails = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string vms_dir_id = 6;
 * @return {string}
 */
proto.zhst.Camera.prototype.getVmsDirId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setVmsDirId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


/**
 * optional int32 device_vender = 7;
 * @return {number}
 */
proto.zhst.Camera.prototype.getDeviceVender = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setDeviceVender = function(value) {
  return jspb.Message.setProto3IntField(this, 7, value);
};


/**
 * optional int32 vms_paltform_id = 8;
 * @return {number}
 */
proto.zhst.Camera.prototype.getVmsPaltformId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setVmsPaltformId = function(value) {
  return jspb.Message.setProto3IntField(this, 8, value);
};


/**
 * optional string vms_channel = 9;
 * @return {string}
 */
proto.zhst.Camera.prototype.getVmsChannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setVmsChannel = function(value) {
  return jspb.Message.setProto3StringField(this, 9, value);
};


/**
 * optional int32 vms_camera_status = 10;
 * @return {number}
 */
proto.zhst.Camera.prototype.getVmsCameraStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setVmsCameraStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 10, value);
};


/**
 * optional string vms_camera_decoder_tag = 11;
 * @return {string}
 */
proto.zhst.Camera.prototype.getVmsCameraDecoderTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setVmsCameraDecoderTag = function(value) {
  return jspb.Message.setProto3StringField(this, 11, value);
};


/**
 * optional double longitude = 12;
 * @return {number}
 */
proto.zhst.Camera.prototype.getLongitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 12, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setLongitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 12, value);
};


/**
 * optional double latitude = 13;
 * @return {number}
 */
proto.zhst.Camera.prototype.getLatitude = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 13, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setLatitude = function(value) {
  return jspb.Message.setProto3FloatField(this, 13, value);
};


/**
 * optional VmsPlatformInfo platform_info = 14;
 * @return {?proto.zhst.VmsPlatformInfo}
 */
proto.zhst.Camera.prototype.getPlatformInfo = function() {
  return /** @type{?proto.zhst.VmsPlatformInfo} */ (
    jspb.Message.getWrapperField(this, proto.zhst.VmsPlatformInfo, 14));
};


/**
 * @param {?proto.zhst.VmsPlatformInfo|undefined} value
 * @return {!proto.zhst.Camera} returns this
*/
proto.zhst.Camera.prototype.setPlatformInfo = function(value) {
  return jspb.Message.setWrapperField(this, 14, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.clearPlatformInfo = function() {
  return this.setPlatformInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.Camera.prototype.hasPlatformInfo = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string extend_info = 15;
 * @return {string}
 */
proto.zhst.Camera.prototype.getExtendInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setExtendInfo = function(value) {
  return jspb.Message.setProto3StringField(this, 15, value);
};


/**
 * optional string rtsp_address = 16;
 * @return {string}
 */
proto.zhst.Camera.prototype.getRtspAddress = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Camera} returns this
 */
proto.zhst.Camera.prototype.setRtspAddress = function(value) {
  return jspb.Message.setProto3StringField(this, 16, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.Vmsdir.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.Vmsdir.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.Vmsdir} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.Vmsdir.toObject = function(includeInstance, msg) {
  var f, obj = {
    stringId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    vmsPaltformId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    name: jspb.Message.getFieldWithDefault(msg, 3, ""),
    parentStringid: jspb.Message.getFieldWithDefault(msg, 4, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.Vmsdir}
 */
proto.zhst.Vmsdir.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.Vmsdir;
  return proto.zhst.Vmsdir.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.Vmsdir} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.Vmsdir}
 */
proto.zhst.Vmsdir.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setStringId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVmsPaltformId(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setParentStringid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.Vmsdir.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.Vmsdir.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.Vmsdir} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.Vmsdir.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getStringId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getVmsPaltformId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getParentStringid();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string string_id = 1;
 * @return {string}
 */
proto.zhst.Vmsdir.prototype.getStringId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Vmsdir} returns this
 */
proto.zhst.Vmsdir.prototype.setStringId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional int32 vms_paltform_id = 2;
 * @return {number}
 */
proto.zhst.Vmsdir.prototype.getVmsPaltformId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.Vmsdir} returns this
 */
proto.zhst.Vmsdir.prototype.setVmsPaltformId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional string name = 3;
 * @return {string}
 */
proto.zhst.Vmsdir.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Vmsdir} returns this
 */
proto.zhst.Vmsdir.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string parent_stringid = 4;
 * @return {string}
 */
proto.zhst.Vmsdir.prototype.getParentStringid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.Vmsdir} returns this
 */
proto.zhst.Vmsdir.prototype.setParentStringid = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ListCameraAndDirRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ListCameraAndDirRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ListCameraAndDirRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListCameraAndDirRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vmsPaltformId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    vmsdirId: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ListCameraAndDirRequest}
 */
proto.zhst.ListCameraAndDirRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ListCameraAndDirRequest;
  return proto.zhst.ListCameraAndDirRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ListCameraAndDirRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ListCameraAndDirRequest}
 */
proto.zhst.ListCameraAndDirRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVmsPaltformId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVmsdirId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ListCameraAndDirRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ListCameraAndDirRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ListCameraAndDirRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListCameraAndDirRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVmsPaltformId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getVmsdirId();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 vms_paltform_id = 1;
 * @return {number}
 */
proto.zhst.ListCameraAndDirRequest.prototype.getVmsPaltformId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.ListCameraAndDirRequest} returns this
 */
proto.zhst.ListCameraAndDirRequest.prototype.setVmsPaltformId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string vmsdir_id = 2;
 * @return {string}
 */
proto.zhst.ListCameraAndDirRequest.prototype.getVmsdirId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListCameraAndDirRequest} returns this
 */
proto.zhst.ListCameraAndDirRequest.prototype.setVmsdirId = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.ListCameraAndDirResponse.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ListCameraAndDirResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ListCameraAndDirResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ListCameraAndDirResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListCameraAndDirResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    camerasList: jspb.Message.toObjectList(msg.getCamerasList(),
    proto.zhst.Camera.toObject, includeInstance),
    vmsdirsList: jspb.Message.toObjectList(msg.getVmsdirsList(),
    proto.zhst.Vmsdir.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ListCameraAndDirResponse}
 */
proto.zhst.ListCameraAndDirResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ListCameraAndDirResponse;
  return proto.zhst.ListCameraAndDirResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ListCameraAndDirResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ListCameraAndDirResponse}
 */
proto.zhst.ListCameraAndDirResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.Camera;
      reader.readMessage(value,proto.zhst.Camera.deserializeBinaryFromReader);
      msg.addCameras(value);
      break;
    case 4:
      var value = new proto.zhst.Vmsdir;
      reader.readMessage(value,proto.zhst.Vmsdir.deserializeBinaryFromReader);
      msg.addVmsdirs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ListCameraAndDirResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ListCameraAndDirResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ListCameraAndDirResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListCameraAndDirResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getCamerasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.zhst.Camera.serializeBinaryToWriter
    );
  }
  f = message.getVmsdirsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.zhst.Vmsdir.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.ListCameraAndDirResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
 */
proto.zhst.ListCameraAndDirResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.ListCameraAndDirResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
*/
proto.zhst.ListCameraAndDirResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
 */
proto.zhst.ListCameraAndDirResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.ListCameraAndDirResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Camera cameras = 3;
 * @return {!Array<!proto.zhst.Camera>}
 */
proto.zhst.ListCameraAndDirResponse.prototype.getCamerasList = function() {
  return /** @type{!Array<!proto.zhst.Camera>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.Camera, 3));
};


/**
 * @param {!Array<!proto.zhst.Camera>} value
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
*/
proto.zhst.ListCameraAndDirResponse.prototype.setCamerasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.zhst.Camera=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.Camera}
 */
proto.zhst.ListCameraAndDirResponse.prototype.addCameras = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.zhst.Camera, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
 */
proto.zhst.ListCameraAndDirResponse.prototype.clearCamerasList = function() {
  return this.setCamerasList([]);
};


/**
 * repeated Vmsdir vmsdirs = 4;
 * @return {!Array<!proto.zhst.Vmsdir>}
 */
proto.zhst.ListCameraAndDirResponse.prototype.getVmsdirsList = function() {
  return /** @type{!Array<!proto.zhst.Vmsdir>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.Vmsdir, 4));
};


/**
 * @param {!Array<!proto.zhst.Vmsdir>} value
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
*/
proto.zhst.ListCameraAndDirResponse.prototype.setVmsdirsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.zhst.Vmsdir=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.Vmsdir}
 */
proto.zhst.ListCameraAndDirResponse.prototype.addVmsdirs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.zhst.Vmsdir, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.ListCameraAndDirResponse} returns this
 */
proto.zhst.ListCameraAndDirResponse.prototype.clearVmsdirsList = function() {
  return this.setVmsdirsList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.EditCameraInfoRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.EditCameraInfoRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.EditCameraInfoRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.EditCameraInfoRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    camera: (f = msg.getCamera()) && proto.zhst.Camera.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.EditCameraInfoRequest}
 */
proto.zhst.EditCameraInfoRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.EditCameraInfoRequest;
  return proto.zhst.EditCameraInfoRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.EditCameraInfoRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.EditCameraInfoRequest}
 */
proto.zhst.EditCameraInfoRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.zhst.Camera;
      reader.readMessage(value,proto.zhst.Camera.deserializeBinaryFromReader);
      msg.setCamera(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.EditCameraInfoRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.EditCameraInfoRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.EditCameraInfoRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.EditCameraInfoRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCamera();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.zhst.Camera.serializeBinaryToWriter
    );
  }
};


/**
 * optional Camera camera = 1;
 * @return {?proto.zhst.Camera}
 */
proto.zhst.EditCameraInfoRequest.prototype.getCamera = function() {
  return /** @type{?proto.zhst.Camera} */ (
    jspb.Message.getWrapperField(this, proto.zhst.Camera, 1));
};


/**
 * @param {?proto.zhst.Camera|undefined} value
 * @return {!proto.zhst.EditCameraInfoRequest} returns this
*/
proto.zhst.EditCameraInfoRequest.prototype.setCamera = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.EditCameraInfoRequest} returns this
 */
proto.zhst.EditCameraInfoRequest.prototype.clearCamera = function() {
  return this.setCamera(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.EditCameraInfoRequest.prototype.hasCamera = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.EditCameraInfoResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.EditCameraInfoResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.EditCameraInfoResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.EditCameraInfoResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.EditCameraInfoResponse}
 */
proto.zhst.EditCameraInfoResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.EditCameraInfoResponse;
  return proto.zhst.EditCameraInfoResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.EditCameraInfoResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.EditCameraInfoResponse}
 */
proto.zhst.EditCameraInfoResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.EditCameraInfoResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.EditCameraInfoResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.EditCameraInfoResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.EditCameraInfoResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.EditCameraInfoResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.EditCameraInfoResponse} returns this
 */
proto.zhst.EditCameraInfoResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.EditCameraInfoResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.EditCameraInfoResponse} returns this
*/
proto.zhst.EditCameraInfoResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.EditCameraInfoResponse} returns this
 */
proto.zhst.EditCameraInfoResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.EditCameraInfoResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchCameraRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchCameraRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchCameraRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cameraId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    cameraNameKey: jspb.Message.getFieldWithDefault(msg, 2, ""),
    start: jspb.Message.getFieldWithDefault(msg, 3, 0),
    count: jspb.Message.getFieldWithDefault(msg, 4, 0),
    status: jspb.Message.getFieldWithDefault(msg, 5, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchCameraRequest}
 */
proto.zhst.SearchCameraRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchCameraRequest;
  return proto.zhst.SearchCameraRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchCameraRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchCameraRequest}
 */
proto.zhst.SearchCameraRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCameraId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setCameraNameKey(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStart(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setStatus(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchCameraRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchCameraRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchCameraRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCameraId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getCameraNameKey();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getStart();
  if (f !== 0) {
    writer.writeInt32(
      3,
      f
    );
  }
  f = message.getCount();
  if (f !== 0) {
    writer.writeInt32(
      4,
      f
    );
  }
  f = message.getStatus();
  if (f !== 0) {
    writer.writeInt32(
      5,
      f
    );
  }
};


/**
 * optional int32 camera_id = 1;
 * @return {number}
 */
proto.zhst.SearchCameraRequest.prototype.getCameraId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchCameraRequest} returns this
 */
proto.zhst.SearchCameraRequest.prototype.setCameraId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string camera_name_key = 2;
 * @return {string}
 */
proto.zhst.SearchCameraRequest.prototype.getCameraNameKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.SearchCameraRequest} returns this
 */
proto.zhst.SearchCameraRequest.prototype.setCameraNameKey = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional int32 start = 3;
 * @return {number}
 */
proto.zhst.SearchCameraRequest.prototype.getStart = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchCameraRequest} returns this
 */
proto.zhst.SearchCameraRequest.prototype.setStart = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional int32 count = 4;
 * @return {number}
 */
proto.zhst.SearchCameraRequest.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchCameraRequest} returns this
 */
proto.zhst.SearchCameraRequest.prototype.setCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional int32 status = 5;
 * @return {number}
 */
proto.zhst.SearchCameraRequest.prototype.getStatus = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchCameraRequest} returns this
 */
proto.zhst.SearchCameraRequest.prototype.setStatus = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.SearchCameraResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchCameraResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchCameraResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchCameraResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    camerasList: jspb.Message.toObjectList(msg.getCamerasList(),
    proto.zhst.Camera.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchCameraResponse}
 */
proto.zhst.SearchCameraResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchCameraResponse;
  return proto.zhst.SearchCameraResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchCameraResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchCameraResponse}
 */
proto.zhst.SearchCameraResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.Camera;
      reader.readMessage(value,proto.zhst.Camera.deserializeBinaryFromReader);
      msg.addCameras(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchCameraResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchCameraResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchCameraResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getCamerasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.zhst.Camera.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.SearchCameraResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.SearchCameraResponse} returns this
 */
proto.zhst.SearchCameraResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.SearchCameraResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.SearchCameraResponse} returns this
*/
proto.zhst.SearchCameraResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchCameraResponse} returns this
 */
proto.zhst.SearchCameraResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchCameraResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated Camera cameras = 3;
 * @return {!Array<!proto.zhst.Camera>}
 */
proto.zhst.SearchCameraResponse.prototype.getCamerasList = function() {
  return /** @type{!Array<!proto.zhst.Camera>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.Camera, 3));
};


/**
 * @param {!Array<!proto.zhst.Camera>} value
 * @return {!proto.zhst.SearchCameraResponse} returns this
*/
proto.zhst.SearchCameraResponse.prototype.setCamerasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.zhst.Camera=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.Camera}
 */
proto.zhst.SearchCameraResponse.prototype.addCameras = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.zhst.Camera, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.SearchCameraResponse} returns this
 */
proto.zhst.SearchCameraResponse.prototype.clearCamerasList = function() {
  return this.setCamerasList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchCameraPathRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchCameraPathRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchCameraPathRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraPathRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    cameraId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    expandDir: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchCameraPathRequest}
 */
proto.zhst.SearchCameraPathRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchCameraPathRequest;
  return proto.zhst.SearchCameraPathRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchCameraPathRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchCameraPathRequest}
 */
proto.zhst.SearchCameraPathRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCameraId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setExpandDir(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchCameraPathRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchCameraPathRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchCameraPathRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraPathRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCameraId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getExpandDir();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 camera_id = 1;
 * @return {number}
 */
proto.zhst.SearchCameraPathRequest.prototype.getCameraId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchCameraPathRequest} returns this
 */
proto.zhst.SearchCameraPathRequest.prototype.setCameraId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional int32 expand_dir = 2;
 * @return {number}
 */
proto.zhst.SearchCameraPathRequest.prototype.getExpandDir = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchCameraPathRequest} returns this
 */
proto.zhst.SearchCameraPathRequest.prototype.setExpandDir = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.VmsdirNode.repeatedFields_ = [3,4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.VmsdirNode.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.VmsdirNode.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.VmsdirNode} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.VmsdirNode.toObject = function(includeInstance, msg) {
  var f, obj = {
    vmsDir: (f = msg.getVmsDir()) && proto.zhst.Vmsdir.toObject(includeInstance, f),
    subVmsDirId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    camerasList: jspb.Message.toObjectList(msg.getCamerasList(),
    proto.zhst.Camera.toObject, includeInstance),
    vmsdirsList: jspb.Message.toObjectList(msg.getVmsdirsList(),
    proto.zhst.Vmsdir.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.VmsdirNode}
 */
proto.zhst.VmsdirNode.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.VmsdirNode;
  return proto.zhst.VmsdirNode.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.VmsdirNode} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.VmsdirNode}
 */
proto.zhst.VmsdirNode.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.zhst.Vmsdir;
      reader.readMessage(value,proto.zhst.Vmsdir.deserializeBinaryFromReader);
      msg.setVmsDir(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setSubVmsDirId(value);
      break;
    case 3:
      var value = new proto.zhst.Camera;
      reader.readMessage(value,proto.zhst.Camera.deserializeBinaryFromReader);
      msg.addCameras(value);
      break;
    case 4:
      var value = new proto.zhst.Vmsdir;
      reader.readMessage(value,proto.zhst.Vmsdir.deserializeBinaryFromReader);
      msg.addVmsdirs(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.VmsdirNode.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.VmsdirNode.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.VmsdirNode} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.VmsdirNode.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVmsDir();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.zhst.Vmsdir.serializeBinaryToWriter
    );
  }
  f = message.getSubVmsDirId();
  if (f !== 0) {
    writer.writeInt32(
      2,
      f
    );
  }
  f = message.getCamerasList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.zhst.Camera.serializeBinaryToWriter
    );
  }
  f = message.getVmsdirsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      4,
      f,
      proto.zhst.Vmsdir.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vmsdir vms_dir = 1;
 * @return {?proto.zhst.Vmsdir}
 */
proto.zhst.VmsdirNode.prototype.getVmsDir = function() {
  return /** @type{?proto.zhst.Vmsdir} */ (
    jspb.Message.getWrapperField(this, proto.zhst.Vmsdir, 1));
};


/**
 * @param {?proto.zhst.Vmsdir|undefined} value
 * @return {!proto.zhst.VmsdirNode} returns this
*/
proto.zhst.VmsdirNode.prototype.setVmsDir = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.VmsdirNode} returns this
 */
proto.zhst.VmsdirNode.prototype.clearVmsDir = function() {
  return this.setVmsDir(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.VmsdirNode.prototype.hasVmsDir = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 sub_vms_dir_id = 2;
 * @return {number}
 */
proto.zhst.VmsdirNode.prototype.getSubVmsDirId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.VmsdirNode} returns this
 */
proto.zhst.VmsdirNode.prototype.setSubVmsDirId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated Camera cameras = 3;
 * @return {!Array<!proto.zhst.Camera>}
 */
proto.zhst.VmsdirNode.prototype.getCamerasList = function() {
  return /** @type{!Array<!proto.zhst.Camera>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.Camera, 3));
};


/**
 * @param {!Array<!proto.zhst.Camera>} value
 * @return {!proto.zhst.VmsdirNode} returns this
*/
proto.zhst.VmsdirNode.prototype.setCamerasList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.zhst.Camera=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.Camera}
 */
proto.zhst.VmsdirNode.prototype.addCameras = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.zhst.Camera, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.VmsdirNode} returns this
 */
proto.zhst.VmsdirNode.prototype.clearCamerasList = function() {
  return this.setCamerasList([]);
};


/**
 * repeated Vmsdir vmsdirs = 4;
 * @return {!Array<!proto.zhst.Vmsdir>}
 */
proto.zhst.VmsdirNode.prototype.getVmsdirsList = function() {
  return /** @type{!Array<!proto.zhst.Vmsdir>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.Vmsdir, 4));
};


/**
 * @param {!Array<!proto.zhst.Vmsdir>} value
 * @return {!proto.zhst.VmsdirNode} returns this
*/
proto.zhst.VmsdirNode.prototype.setVmsdirsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 4, value);
};


/**
 * @param {!proto.zhst.Vmsdir=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.Vmsdir}
 */
proto.zhst.VmsdirNode.prototype.addVmsdirs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 4, opt_value, proto.zhst.Vmsdir, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.VmsdirNode} returns this
 */
proto.zhst.VmsdirNode.prototype.clearVmsdirsList = function() {
  return this.setVmsdirsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.SearchCameraPathResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchCameraPathResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchCameraPathResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchCameraPathResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraPathResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    vmsdirNodesList: jspb.Message.toObjectList(msg.getVmsdirNodesList(),
    proto.zhst.VmsdirNode.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchCameraPathResponse}
 */
proto.zhst.SearchCameraPathResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchCameraPathResponse;
  return proto.zhst.SearchCameraPathResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchCameraPathResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchCameraPathResponse}
 */
proto.zhst.SearchCameraPathResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.VmsdirNode;
      reader.readMessage(value,proto.zhst.VmsdirNode.deserializeBinaryFromReader);
      msg.addVmsdirNodes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchCameraPathResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchCameraPathResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchCameraPathResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchCameraPathResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getVmsdirNodesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.zhst.VmsdirNode.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.SearchCameraPathResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.SearchCameraPathResponse} returns this
 */
proto.zhst.SearchCameraPathResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.SearchCameraPathResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.SearchCameraPathResponse} returns this
*/
proto.zhst.SearchCameraPathResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchCameraPathResponse} returns this
 */
proto.zhst.SearchCameraPathResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchCameraPathResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated VmsdirNode vmsdir_nodes = 3;
 * @return {!Array<!proto.zhst.VmsdirNode>}
 */
proto.zhst.SearchCameraPathResponse.prototype.getVmsdirNodesList = function() {
  return /** @type{!Array<!proto.zhst.VmsdirNode>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.VmsdirNode, 3));
};


/**
 * @param {!Array<!proto.zhst.VmsdirNode>} value
 * @return {!proto.zhst.SearchCameraPathResponse} returns this
*/
proto.zhst.SearchCameraPathResponse.prototype.setVmsdirNodesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.zhst.VmsdirNode=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.VmsdirNode}
 */
proto.zhst.SearchCameraPathResponse.prototype.addVmsdirNodes = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.zhst.VmsdirNode, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.SearchCameraPathResponse} returns this
 */
proto.zhst.SearchCameraPathResponse.prototype.clearVmsdirNodesList = function() {
  return this.setVmsdirNodesList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ListVmsPlatformRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ListVmsPlatformRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ListVmsPlatformRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListVmsPlatformRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxResults: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ListVmsPlatformRequest}
 */
proto.zhst.ListVmsPlatformRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ListVmsPlatformRequest;
  return proto.zhst.ListVmsPlatformRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ListVmsPlatformRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ListVmsPlatformRequest}
 */
proto.zhst.ListVmsPlatformRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMaxResults(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ListVmsPlatformRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ListVmsPlatformRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ListVmsPlatformRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListVmsPlatformRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional int32 max_results = 1;
 * @return {number}
 */
proto.zhst.ListVmsPlatformRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.ListVmsPlatformRequest} returns this
 */
proto.zhst.ListVmsPlatformRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.zhst.ListVmsPlatformRequest.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListVmsPlatformRequest} returns this
 */
proto.zhst.ListVmsPlatformRequest.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.ListVmsPlatformResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ListVmsPlatformResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ListVmsPlatformResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ListVmsPlatformResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListVmsPlatformResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    paltformsList: jspb.Message.toObjectList(msg.getPaltformsList(),
    proto.zhst.VmsPlatformInfo.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ListVmsPlatformResponse}
 */
proto.zhst.ListVmsPlatformResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ListVmsPlatformResponse;
  return proto.zhst.ListVmsPlatformResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ListVmsPlatformResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ListVmsPlatformResponse}
 */
proto.zhst.ListVmsPlatformResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.VmsPlatformInfo;
      reader.readMessage(value,proto.zhst.VmsPlatformInfo.deserializeBinaryFromReader);
      msg.addPaltforms(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalCount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ListVmsPlatformResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ListVmsPlatformResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ListVmsPlatformResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListVmsPlatformResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getPaltformsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.zhst.VmsPlatformInfo.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.ListVmsPlatformResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
 */
proto.zhst.ListVmsPlatformResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.ListVmsPlatformResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
*/
proto.zhst.ListVmsPlatformResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
 */
proto.zhst.ListVmsPlatformResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.ListVmsPlatformResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated VmsPlatformInfo paltforms = 3;
 * @return {!Array<!proto.zhst.VmsPlatformInfo>}
 */
proto.zhst.ListVmsPlatformResponse.prototype.getPaltformsList = function() {
  return /** @type{!Array<!proto.zhst.VmsPlatformInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.VmsPlatformInfo, 3));
};


/**
 * @param {!Array<!proto.zhst.VmsPlatformInfo>} value
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
*/
proto.zhst.ListVmsPlatformResponse.prototype.setPaltformsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.zhst.VmsPlatformInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.VmsPlatformInfo}
 */
proto.zhst.ListVmsPlatformResponse.prototype.addPaltforms = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.zhst.VmsPlatformInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
 */
proto.zhst.ListVmsPlatformResponse.prototype.clearPaltformsList = function() {
  return this.setPaltformsList([]);
};


/**
 * optional uint64 total_count = 4;
 * @return {number}
 */
proto.zhst.ListVmsPlatformResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
 */
proto.zhst.ListVmsPlatformResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string next_token = 5;
 * @return {string}
 */
proto.zhst.ListVmsPlatformResponse.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListVmsPlatformResponse} returns this
 */
proto.zhst.ListVmsPlatformResponse.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.CreateVmsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.CreateVmsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.CreateVmsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateVmsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vmsInfo: (f = msg.getVmsInfo()) && proto.zhst.VmsPlatformInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.CreateVmsRequest}
 */
proto.zhst.CreateVmsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.CreateVmsRequest;
  return proto.zhst.CreateVmsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.CreateVmsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.CreateVmsRequest}
 */
proto.zhst.CreateVmsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.zhst.VmsPlatformInfo;
      reader.readMessage(value,proto.zhst.VmsPlatformInfo.deserializeBinaryFromReader);
      msg.setVmsInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.CreateVmsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.CreateVmsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.CreateVmsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateVmsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVmsInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.zhst.VmsPlatformInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional VmsPlatformInfo vms_info = 1;
 * @return {?proto.zhst.VmsPlatformInfo}
 */
proto.zhst.CreateVmsRequest.prototype.getVmsInfo = function() {
  return /** @type{?proto.zhst.VmsPlatformInfo} */ (
    jspb.Message.getWrapperField(this, proto.zhst.VmsPlatformInfo, 1));
};


/**
 * @param {?proto.zhst.VmsPlatformInfo|undefined} value
 * @return {!proto.zhst.CreateVmsRequest} returns this
*/
proto.zhst.CreateVmsRequest.prototype.setVmsInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.CreateVmsRequest} returns this
 */
proto.zhst.CreateVmsRequest.prototype.clearVmsInfo = function() {
  return this.setVmsInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.CreateVmsRequest.prototype.hasVmsInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.CreateVmsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.CreateVmsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.CreateVmsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateVmsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.CreateVmsResponse}
 */
proto.zhst.CreateVmsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.CreateVmsResponse;
  return proto.zhst.CreateVmsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.CreateVmsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.CreateVmsResponse}
 */
proto.zhst.CreateVmsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.CreateVmsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.CreateVmsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.CreateVmsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateVmsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.CreateVmsResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.CreateVmsResponse} returns this
 */
proto.zhst.CreateVmsResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.CreateVmsResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.CreateVmsResponse} returns this
*/
proto.zhst.CreateVmsResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.CreateVmsResponse} returns this
 */
proto.zhst.CreateVmsResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.CreateVmsResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.DeleteVmsRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.DeleteVmsRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.DeleteVmsRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeleteVmsRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    vmsPaltformId: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.DeleteVmsRequest}
 */
proto.zhst.DeleteVmsRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.DeleteVmsRequest;
  return proto.zhst.DeleteVmsRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.DeleteVmsRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.DeleteVmsRequest}
 */
proto.zhst.DeleteVmsRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setVmsPaltformId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.DeleteVmsRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.DeleteVmsRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.DeleteVmsRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeleteVmsRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getVmsPaltformId();
  if (f !== 0) {
    writer.writeInt32(
      1,
      f
    );
  }
};


/**
 * optional int32 vms_paltform_id = 1;
 * @return {number}
 */
proto.zhst.DeleteVmsRequest.prototype.getVmsPaltformId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.DeleteVmsRequest} returns this
 */
proto.zhst.DeleteVmsRequest.prototype.setVmsPaltformId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.DeteleVmsResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.DeteleVmsResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.DeteleVmsResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeteleVmsResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.DeteleVmsResponse}
 */
proto.zhst.DeteleVmsResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.DeteleVmsResponse;
  return proto.zhst.DeteleVmsResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.DeteleVmsResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.DeteleVmsResponse}
 */
proto.zhst.DeteleVmsResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.DeteleVmsResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.DeteleVmsResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.DeteleVmsResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeteleVmsResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.DeteleVmsResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.DeteleVmsResponse} returns this
 */
proto.zhst.DeteleVmsResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.DeteleVmsResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.DeteleVmsResponse} returns this
*/
proto.zhst.DeteleVmsResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.DeteleVmsResponse} returns this
 */
proto.zhst.DeteleVmsResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.DeteleVmsResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.zhst);
