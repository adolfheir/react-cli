// source: SearchPlayback.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
var PreprocessDataSvc_pb = require('./PreprocessDataSvc_pb.js');
goog.object.extend(proto, PreprocessDataSvc_pb);
var monitor_pb = require('./monitor_pb.js');
goog.object.extend(proto, monitor_pb);
var search_pb = require('./search_pb.js');
goog.object.extend(proto, search_pb);
goog.exportSymbol('proto.zhst.CreateSearchPlaybackRequest', null, global);
goog.exportSymbol('proto.zhst.CreateSearchPlaybackResponse', null, global);
goog.exportSymbol('proto.zhst.DeleteSearchPlaybackRequest', null, global);
goog.exportSymbol('proto.zhst.DeleteSearchPlaybackResponse', null, global);
goog.exportSymbol('proto.zhst.DescribeSearchPlaybackRequest', null, global);
goog.exportSymbol('proto.zhst.DescribeSearchPlaybackResponse', null, global);
goog.exportSymbol('proto.zhst.ListSearchPlaybacksRequest', null, global);
goog.exportSymbol('proto.zhst.ListSearchPlaybacksResponse', null, global);
goog.exportSymbol('proto.zhst.ModifySearchPlaybackRequest', null, global);
goog.exportSymbol('proto.zhst.ModifySearchPlaybackResponse', null, global);
goog.exportSymbol('proto.zhst.SearchPlayback', null, global);
goog.exportSymbol('proto.zhst.SearchPlaybackClue', null, global);
goog.exportSymbol('proto.zhst.SearchPlaybackClueExtendInfo', null, global);
goog.exportSymbol('proto.zhst.SearchPlaybackExtendInfo', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchPlaybackClueExtendInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.SearchPlaybackClueExtendInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchPlaybackClueExtendInfo.displayName = 'proto.zhst.SearchPlaybackClueExtendInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchPlaybackClue = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.SearchPlaybackClue, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchPlaybackClue.displayName = 'proto.zhst.SearchPlaybackClue';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchPlaybackExtendInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.SearchPlaybackExtendInfo.repeatedFields_, null);
};
goog.inherits(proto.zhst.SearchPlaybackExtendInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchPlaybackExtendInfo.displayName = 'proto.zhst.SearchPlaybackExtendInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.SearchPlayback = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.SearchPlayback, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.SearchPlayback.displayName = 'proto.zhst.SearchPlayback';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.CreateSearchPlaybackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.CreateSearchPlaybackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.CreateSearchPlaybackRequest.displayName = 'proto.zhst.CreateSearchPlaybackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.CreateSearchPlaybackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.CreateSearchPlaybackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.CreateSearchPlaybackResponse.displayName = 'proto.zhst.CreateSearchPlaybackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.DeleteSearchPlaybackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.DeleteSearchPlaybackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.DeleteSearchPlaybackRequest.displayName = 'proto.zhst.DeleteSearchPlaybackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.DeleteSearchPlaybackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.DeleteSearchPlaybackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.DeleteSearchPlaybackResponse.displayName = 'proto.zhst.DeleteSearchPlaybackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ModifySearchPlaybackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.ModifySearchPlaybackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ModifySearchPlaybackRequest.displayName = 'proto.zhst.ModifySearchPlaybackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ModifySearchPlaybackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.ModifySearchPlaybackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ModifySearchPlaybackResponse.displayName = 'proto.zhst.ModifySearchPlaybackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.DescribeSearchPlaybackRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.DescribeSearchPlaybackRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.DescribeSearchPlaybackRequest.displayName = 'proto.zhst.DescribeSearchPlaybackRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.DescribeSearchPlaybackResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.DescribeSearchPlaybackResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.DescribeSearchPlaybackResponse.displayName = 'proto.zhst.DescribeSearchPlaybackResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ListSearchPlaybacksRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.zhst.ListSearchPlaybacksRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ListSearchPlaybacksRequest.displayName = 'proto.zhst.ListSearchPlaybacksRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.zhst.ListSearchPlaybacksResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.zhst.ListSearchPlaybacksResponse.repeatedFields_, null);
};
goog.inherits(proto.zhst.ListSearchPlaybacksResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.zhst.ListSearchPlaybacksResponse.displayName = 'proto.zhst.ListSearchPlaybacksResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchPlaybackClueExtendInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchPlaybackClueExtendInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlaybackClueExtendInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    processItem: (f = msg.getProcessItem()) && PreprocessDataSvc_pb.PreprocessDataItem.toObject(includeInstance, f),
    suspectItem: (f = msg.getSuspectItem()) && monitor_pb.MonitorResult.toObject(includeInstance, f),
    searchResult: (f = msg.getSearchResult()) && search_pb.SearchResult.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo}
 */
proto.zhst.SearchPlaybackClueExtendInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchPlaybackClueExtendInfo;
  return proto.zhst.SearchPlaybackClueExtendInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchPlaybackClueExtendInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo}
 */
proto.zhst.SearchPlaybackClueExtendInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new PreprocessDataSvc_pb.PreprocessDataItem;
      reader.readMessage(value,PreprocessDataSvc_pb.PreprocessDataItem.deserializeBinaryFromReader);
      msg.setProcessItem(value);
      break;
    case 2:
      var value = new monitor_pb.MonitorResult;
      reader.readMessage(value,monitor_pb.MonitorResult.deserializeBinaryFromReader);
      msg.setSuspectItem(value);
      break;
    case 3:
      var value = new search_pb.SearchResult;
      reader.readMessage(value,search_pb.SearchResult.deserializeBinaryFromReader);
      msg.setSearchResult(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchPlaybackClueExtendInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchPlaybackClueExtendInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlaybackClueExtendInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getProcessItem();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      PreprocessDataSvc_pb.PreprocessDataItem.serializeBinaryToWriter
    );
  }
  f = message.getSuspectItem();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      monitor_pb.MonitorResult.serializeBinaryToWriter
    );
  }
  f = message.getSearchResult();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      search_pb.SearchResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional PreprocessDataSvc.PreprocessDataItem process_item = 1;
 * @return {?proto.PreprocessDataSvc.PreprocessDataItem}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.getProcessItem = function() {
  return /** @type{?proto.PreprocessDataSvc.PreprocessDataItem} */ (
    jspb.Message.getWrapperField(this, PreprocessDataSvc_pb.PreprocessDataItem, 1));
};


/**
 * @param {?proto.PreprocessDataSvc.PreprocessDataItem|undefined} value
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo} returns this
*/
proto.zhst.SearchPlaybackClueExtendInfo.prototype.setProcessItem = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo} returns this
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.clearProcessItem = function() {
  return this.setProcessItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.hasProcessItem = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Monitor.MonitorResult suspect_item = 2;
 * @return {?proto.Monitor.MonitorResult}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.getSuspectItem = function() {
  return /** @type{?proto.Monitor.MonitorResult} */ (
    jspb.Message.getWrapperField(this, monitor_pb.MonitorResult, 2));
};


/**
 * @param {?proto.Monitor.MonitorResult|undefined} value
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo} returns this
*/
proto.zhst.SearchPlaybackClueExtendInfo.prototype.setSuspectItem = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo} returns this
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.clearSuspectItem = function() {
  return this.setSuspectItem(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.hasSuspectItem = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional search.SearchResult search_result = 3;
 * @return {?proto.search.SearchResult}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.getSearchResult = function() {
  return /** @type{?proto.search.SearchResult} */ (
    jspb.Message.getWrapperField(this, search_pb.SearchResult, 3));
};


/**
 * @param {?proto.search.SearchResult|undefined} value
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo} returns this
*/
proto.zhst.SearchPlaybackClueExtendInfo.prototype.setSearchResult = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchPlaybackClueExtendInfo} returns this
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.clearSearchResult = function() {
  return this.setSearchResult(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchPlaybackClueExtendInfo.prototype.hasSearchResult = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchPlaybackClue.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchPlaybackClue.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchPlaybackClue} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlaybackClue.toObject = function(includeInstance, msg) {
  var f, obj = {
    coverUrl: jspb.Message.getFieldWithDefault(msg, 1, ""),
    extendInfo: (f = msg.getExtendInfo()) && proto.zhst.SearchPlaybackClueExtendInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchPlaybackClue}
 */
proto.zhst.SearchPlaybackClue.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchPlaybackClue;
  return proto.zhst.SearchPlaybackClue.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchPlaybackClue} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchPlaybackClue}
 */
proto.zhst.SearchPlaybackClue.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setCoverUrl(value);
      break;
    case 2:
      var value = new proto.zhst.SearchPlaybackClueExtendInfo;
      reader.readMessage(value,proto.zhst.SearchPlaybackClueExtendInfo.deserializeBinaryFromReader);
      msg.setExtendInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchPlaybackClue.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchPlaybackClue.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchPlaybackClue} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlaybackClue.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCoverUrl();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getExtendInfo();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.zhst.SearchPlaybackClueExtendInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string cover_url = 1;
 * @return {string}
 */
proto.zhst.SearchPlaybackClue.prototype.getCoverUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.SearchPlaybackClue} returns this
 */
proto.zhst.SearchPlaybackClue.prototype.setCoverUrl = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional SearchPlaybackClueExtendInfo extend_info = 2;
 * @return {?proto.zhst.SearchPlaybackClueExtendInfo}
 */
proto.zhst.SearchPlaybackClue.prototype.getExtendInfo = function() {
  return /** @type{?proto.zhst.SearchPlaybackClueExtendInfo} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlaybackClueExtendInfo, 2));
};


/**
 * @param {?proto.zhst.SearchPlaybackClueExtendInfo|undefined} value
 * @return {!proto.zhst.SearchPlaybackClue} returns this
*/
proto.zhst.SearchPlaybackClue.prototype.setExtendInfo = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchPlaybackClue} returns this
 */
proto.zhst.SearchPlaybackClue.prototype.clearExtendInfo = function() {
  return this.setExtendInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchPlaybackClue.prototype.hasExtendInfo = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.SearchPlaybackExtendInfo.repeatedFields_ = [1,2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchPlaybackExtendInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchPlaybackExtendInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlaybackExtendInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    cameraIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    cluesList: jspb.Message.toObjectList(msg.getCluesList(),
    proto.zhst.SearchPlaybackClue.toObject, includeInstance),
    searchrequest: (f = msg.getSearchrequest()) && search_pb.SearchRequest.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchPlaybackExtendInfo}
 */
proto.zhst.SearchPlaybackExtendInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchPlaybackExtendInfo;
  return proto.zhst.SearchPlaybackExtendInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchPlaybackExtendInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchPlaybackExtendInfo}
 */
proto.zhst.SearchPlaybackExtendInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!Array<number>} */ (reader.readPackedUint64());
      msg.setCameraIdsList(value);
      break;
    case 2:
      var value = new proto.zhst.SearchPlaybackClue;
      reader.readMessage(value,proto.zhst.SearchPlaybackClue.deserializeBinaryFromReader);
      msg.addClues(value);
      break;
    case 3:
      var value = new search_pb.SearchRequest;
      reader.readMessage(value,search_pb.SearchRequest.deserializeBinaryFromReader);
      msg.setSearchrequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchPlaybackExtendInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchPlaybackExtendInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlaybackExtendInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCameraIdsList();
  if (f.length > 0) {
    writer.writePackedUint64(
      1,
      f
    );
  }
  f = message.getCluesList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.zhst.SearchPlaybackClue.serializeBinaryToWriter
    );
  }
  f = message.getSearchrequest();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      search_pb.SearchRequest.serializeBinaryToWriter
    );
  }
};


/**
 * repeated uint64 camera_ids = 1;
 * @return {!Array<number>}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.getCameraIdsList = function() {
  return /** @type {!Array<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<number>} value
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.setCameraIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {number} value
 * @param {number=} opt_index
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.addCameraIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.clearCameraIdsList = function() {
  return this.setCameraIdsList([]);
};


/**
 * repeated SearchPlaybackClue clues = 2;
 * @return {!Array<!proto.zhst.SearchPlaybackClue>}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.getCluesList = function() {
  return /** @type{!Array<!proto.zhst.SearchPlaybackClue>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.SearchPlaybackClue, 2));
};


/**
 * @param {!Array<!proto.zhst.SearchPlaybackClue>} value
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
*/
proto.zhst.SearchPlaybackExtendInfo.prototype.setCluesList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.zhst.SearchPlaybackClue=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.SearchPlaybackClue}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.addClues = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.zhst.SearchPlaybackClue, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.clearCluesList = function() {
  return this.setCluesList([]);
};


/**
 * optional search.SearchRequest searchRequest = 3;
 * @return {?proto.search.SearchRequest}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.getSearchrequest = function() {
  return /** @type{?proto.search.SearchRequest} */ (
    jspb.Message.getWrapperField(this, search_pb.SearchRequest, 3));
};


/**
 * @param {?proto.search.SearchRequest|undefined} value
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
*/
proto.zhst.SearchPlaybackExtendInfo.prototype.setSearchrequest = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchPlaybackExtendInfo} returns this
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.clearSearchrequest = function() {
  return this.setSearchrequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchPlaybackExtendInfo.prototype.hasSearchrequest = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.SearchPlayback.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.SearchPlayback.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.SearchPlayback} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlayback.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0),
    createdAt: jspb.Message.getFieldWithDefault(msg, 2, 0),
    updatedAt: jspb.Message.getFieldWithDefault(msg, 3, 0),
    deletedAt: jspb.Message.getFieldWithDefault(msg, 4, 0),
    name: jspb.Message.getFieldWithDefault(msg, 5, ""),
    rawExtendInfo: msg.getRawExtendInfo_asB64(),
    extendInfo: (f = msg.getExtendInfo()) && proto.zhst.SearchPlaybackExtendInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.SearchPlayback}
 */
proto.zhst.SearchPlayback.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.SearchPlayback;
  return proto.zhst.SearchPlayback.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.SearchPlayback} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.SearchPlayback}
 */
proto.zhst.SearchPlayback.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCreatedAt(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUpdatedAt(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDeletedAt(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 6:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setRawExtendInfo(value);
      break;
    case 99:
      var value = new proto.zhst.SearchPlaybackExtendInfo;
      reader.readMessage(value,proto.zhst.SearchPlaybackExtendInfo.deserializeBinaryFromReader);
      msg.setExtendInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.SearchPlayback.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.SearchPlayback.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.SearchPlayback} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.SearchPlayback.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCreatedAt();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getUpdatedAt();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getDeletedAt();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getName();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getRawExtendInfo_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      6,
      f
    );
  }
  f = message.getExtendInfo();
  if (f != null) {
    writer.writeMessage(
      99,
      f,
      proto.zhst.SearchPlaybackExtendInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.zhst.SearchPlayback.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional uint64 created_at = 2;
 * @return {number}
 */
proto.zhst.SearchPlayback.prototype.getCreatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.setCreatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 updated_at = 3;
 * @return {number}
 */
proto.zhst.SearchPlayback.prototype.getUpdatedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.setUpdatedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional uint64 deleted_at = 4;
 * @return {number}
 */
proto.zhst.SearchPlayback.prototype.getDeletedAt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.setDeletedAt = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.zhst.SearchPlayback.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.setName = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional bytes raw_extend_info = 6;
 * @return {string}
 */
proto.zhst.SearchPlayback.prototype.getRawExtendInfo = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * optional bytes raw_extend_info = 6;
 * This is a type-conversion wrapper around `getRawExtendInfo()`
 * @return {string}
 */
proto.zhst.SearchPlayback.prototype.getRawExtendInfo_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getRawExtendInfo()));
};


/**
 * optional bytes raw_extend_info = 6;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getRawExtendInfo()`
 * @return {!Uint8Array}
 */
proto.zhst.SearchPlayback.prototype.getRawExtendInfo_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getRawExtendInfo()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.setRawExtendInfo = function(value) {
  return jspb.Message.setProto3BytesField(this, 6, value);
};


/**
 * optional SearchPlaybackExtendInfo extend_info = 99;
 * @return {?proto.zhst.SearchPlaybackExtendInfo}
 */
proto.zhst.SearchPlayback.prototype.getExtendInfo = function() {
  return /** @type{?proto.zhst.SearchPlaybackExtendInfo} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlaybackExtendInfo, 99));
};


/**
 * @param {?proto.zhst.SearchPlaybackExtendInfo|undefined} value
 * @return {!proto.zhst.SearchPlayback} returns this
*/
proto.zhst.SearchPlayback.prototype.setExtendInfo = function(value) {
  return jspb.Message.setWrapperField(this, 99, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.SearchPlayback} returns this
 */
proto.zhst.SearchPlayback.prototype.clearExtendInfo = function() {
  return this.setExtendInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.SearchPlayback.prototype.hasExtendInfo = function() {
  return jspb.Message.getField(this, 99) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.CreateSearchPlaybackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.CreateSearchPlaybackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.CreateSearchPlaybackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateSearchPlaybackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchPlayback: (f = msg.getSearchPlayback()) && proto.zhst.SearchPlayback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.CreateSearchPlaybackRequest}
 */
proto.zhst.CreateSearchPlaybackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.CreateSearchPlaybackRequest;
  return proto.zhst.CreateSearchPlaybackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.CreateSearchPlaybackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.CreateSearchPlaybackRequest}
 */
proto.zhst.CreateSearchPlaybackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.zhst.SearchPlayback;
      reader.readMessage(value,proto.zhst.SearchPlayback.deserializeBinaryFromReader);
      msg.setSearchPlayback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.CreateSearchPlaybackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.CreateSearchPlaybackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.CreateSearchPlaybackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateSearchPlaybackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchPlayback();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.zhst.SearchPlayback.serializeBinaryToWriter
    );
  }
};


/**
 * optional SearchPlayback search_playback = 1;
 * @return {?proto.zhst.SearchPlayback}
 */
proto.zhst.CreateSearchPlaybackRequest.prototype.getSearchPlayback = function() {
  return /** @type{?proto.zhst.SearchPlayback} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlayback, 1));
};


/**
 * @param {?proto.zhst.SearchPlayback|undefined} value
 * @return {!proto.zhst.CreateSearchPlaybackRequest} returns this
*/
proto.zhst.CreateSearchPlaybackRequest.prototype.setSearchPlayback = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.CreateSearchPlaybackRequest} returns this
 */
proto.zhst.CreateSearchPlaybackRequest.prototype.clearSearchPlayback = function() {
  return this.setSearchPlayback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.CreateSearchPlaybackRequest.prototype.hasSearchPlayback = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.CreateSearchPlaybackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.CreateSearchPlaybackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateSearchPlaybackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    searchPlayback: (f = msg.getSearchPlayback()) && proto.zhst.SearchPlayback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.CreateSearchPlaybackResponse}
 */
proto.zhst.CreateSearchPlaybackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.CreateSearchPlaybackResponse;
  return proto.zhst.CreateSearchPlaybackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.CreateSearchPlaybackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.CreateSearchPlaybackResponse}
 */
proto.zhst.CreateSearchPlaybackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.SearchPlayback;
      reader.readMessage(value,proto.zhst.SearchPlayback.deserializeBinaryFromReader);
      msg.setSearchPlayback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.CreateSearchPlaybackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.CreateSearchPlaybackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.CreateSearchPlaybackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getSearchPlayback();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.zhst.SearchPlayback.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.CreateSearchPlaybackResponse} returns this
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.CreateSearchPlaybackResponse} returns this
*/
proto.zhst.CreateSearchPlaybackResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.CreateSearchPlaybackResponse} returns this
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SearchPlayback search_playback = 3;
 * @return {?proto.zhst.SearchPlayback}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.getSearchPlayback = function() {
  return /** @type{?proto.zhst.SearchPlayback} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlayback, 3));
};


/**
 * @param {?proto.zhst.SearchPlayback|undefined} value
 * @return {!proto.zhst.CreateSearchPlaybackResponse} returns this
*/
proto.zhst.CreateSearchPlaybackResponse.prototype.setSearchPlayback = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.CreateSearchPlaybackResponse} returns this
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.clearSearchPlayback = function() {
  return this.setSearchPlayback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.CreateSearchPlaybackResponse.prototype.hasSearchPlayback = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.DeleteSearchPlaybackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.DeleteSearchPlaybackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.DeleteSearchPlaybackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeleteSearchPlaybackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.DeleteSearchPlaybackRequest}
 */
proto.zhst.DeleteSearchPlaybackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.DeleteSearchPlaybackRequest;
  return proto.zhst.DeleteSearchPlaybackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.DeleteSearchPlaybackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.DeleteSearchPlaybackRequest}
 */
proto.zhst.DeleteSearchPlaybackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.DeleteSearchPlaybackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.DeleteSearchPlaybackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.DeleteSearchPlaybackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeleteSearchPlaybackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.zhst.DeleteSearchPlaybackRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.DeleteSearchPlaybackRequest} returns this
 */
proto.zhst.DeleteSearchPlaybackRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.DeleteSearchPlaybackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.DeleteSearchPlaybackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeleteSearchPlaybackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.DeleteSearchPlaybackResponse}
 */
proto.zhst.DeleteSearchPlaybackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.DeleteSearchPlaybackResponse;
  return proto.zhst.DeleteSearchPlaybackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.DeleteSearchPlaybackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.DeleteSearchPlaybackResponse}
 */
proto.zhst.DeleteSearchPlaybackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.DeleteSearchPlaybackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.DeleteSearchPlaybackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DeleteSearchPlaybackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.DeleteSearchPlaybackResponse} returns this
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.DeleteSearchPlaybackResponse} returns this
*/
proto.zhst.DeleteSearchPlaybackResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.DeleteSearchPlaybackResponse} returns this
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.DeleteSearchPlaybackResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ModifySearchPlaybackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ModifySearchPlaybackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ModifySearchPlaybackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ModifySearchPlaybackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    searchPlayback: (f = msg.getSearchPlayback()) && proto.zhst.SearchPlayback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ModifySearchPlaybackRequest}
 */
proto.zhst.ModifySearchPlaybackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ModifySearchPlaybackRequest;
  return proto.zhst.ModifySearchPlaybackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ModifySearchPlaybackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ModifySearchPlaybackRequest}
 */
proto.zhst.ModifySearchPlaybackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.zhst.SearchPlayback;
      reader.readMessage(value,proto.zhst.SearchPlayback.deserializeBinaryFromReader);
      msg.setSearchPlayback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ModifySearchPlaybackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ModifySearchPlaybackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ModifySearchPlaybackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ModifySearchPlaybackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSearchPlayback();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.zhst.SearchPlayback.serializeBinaryToWriter
    );
  }
};


/**
 * optional SearchPlayback search_playback = 1;
 * @return {?proto.zhst.SearchPlayback}
 */
proto.zhst.ModifySearchPlaybackRequest.prototype.getSearchPlayback = function() {
  return /** @type{?proto.zhst.SearchPlayback} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlayback, 1));
};


/**
 * @param {?proto.zhst.SearchPlayback|undefined} value
 * @return {!proto.zhst.ModifySearchPlaybackRequest} returns this
*/
proto.zhst.ModifySearchPlaybackRequest.prototype.setSearchPlayback = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.ModifySearchPlaybackRequest} returns this
 */
proto.zhst.ModifySearchPlaybackRequest.prototype.clearSearchPlayback = function() {
  return this.setSearchPlayback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.ModifySearchPlaybackRequest.prototype.hasSearchPlayback = function() {
  return jspb.Message.getField(this, 1) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ModifySearchPlaybackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ModifySearchPlaybackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ModifySearchPlaybackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    searchPlayback: (f = msg.getSearchPlayback()) && proto.zhst.SearchPlayback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ModifySearchPlaybackResponse}
 */
proto.zhst.ModifySearchPlaybackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ModifySearchPlaybackResponse;
  return proto.zhst.ModifySearchPlaybackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ModifySearchPlaybackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ModifySearchPlaybackResponse}
 */
proto.zhst.ModifySearchPlaybackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.SearchPlayback;
      reader.readMessage(value,proto.zhst.SearchPlayback.deserializeBinaryFromReader);
      msg.setSearchPlayback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ModifySearchPlaybackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ModifySearchPlaybackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ModifySearchPlaybackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getSearchPlayback();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.zhst.SearchPlayback.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ModifySearchPlaybackResponse} returns this
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.ModifySearchPlaybackResponse} returns this
*/
proto.zhst.ModifySearchPlaybackResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.ModifySearchPlaybackResponse} returns this
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SearchPlayback search_playback = 3;
 * @return {?proto.zhst.SearchPlayback}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.getSearchPlayback = function() {
  return /** @type{?proto.zhst.SearchPlayback} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlayback, 3));
};


/**
 * @param {?proto.zhst.SearchPlayback|undefined} value
 * @return {!proto.zhst.ModifySearchPlaybackResponse} returns this
*/
proto.zhst.ModifySearchPlaybackResponse.prototype.setSearchPlayback = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.ModifySearchPlaybackResponse} returns this
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.clearSearchPlayback = function() {
  return this.setSearchPlayback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.ModifySearchPlaybackResponse.prototype.hasSearchPlayback = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.DescribeSearchPlaybackRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.DescribeSearchPlaybackRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.DescribeSearchPlaybackRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DescribeSearchPlaybackRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.DescribeSearchPlaybackRequest}
 */
proto.zhst.DescribeSearchPlaybackRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.DescribeSearchPlaybackRequest;
  return proto.zhst.DescribeSearchPlaybackRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.DescribeSearchPlaybackRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.DescribeSearchPlaybackRequest}
 */
proto.zhst.DescribeSearchPlaybackRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.DescribeSearchPlaybackRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.DescribeSearchPlaybackRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.DescribeSearchPlaybackRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DescribeSearchPlaybackRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.zhst.DescribeSearchPlaybackRequest.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.DescribeSearchPlaybackRequest} returns this
 */
proto.zhst.DescribeSearchPlaybackRequest.prototype.setId = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.DescribeSearchPlaybackResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.DescribeSearchPlaybackResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DescribeSearchPlaybackResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    searchPlayback: (f = msg.getSearchPlayback()) && proto.zhst.SearchPlayback.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.DescribeSearchPlaybackResponse}
 */
proto.zhst.DescribeSearchPlaybackResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.DescribeSearchPlaybackResponse;
  return proto.zhst.DescribeSearchPlaybackResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.DescribeSearchPlaybackResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.DescribeSearchPlaybackResponse}
 */
proto.zhst.DescribeSearchPlaybackResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.SearchPlayback;
      reader.readMessage(value,proto.zhst.SearchPlayback.deserializeBinaryFromReader);
      msg.setSearchPlayback(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.DescribeSearchPlaybackResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.DescribeSearchPlaybackResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.DescribeSearchPlaybackResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getSearchPlayback();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.zhst.SearchPlayback.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.DescribeSearchPlaybackResponse} returns this
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.DescribeSearchPlaybackResponse} returns this
*/
proto.zhst.DescribeSearchPlaybackResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.DescribeSearchPlaybackResponse} returns this
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional SearchPlayback search_playback = 3;
 * @return {?proto.zhst.SearchPlayback}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.getSearchPlayback = function() {
  return /** @type{?proto.zhst.SearchPlayback} */ (
    jspb.Message.getWrapperField(this, proto.zhst.SearchPlayback, 3));
};


/**
 * @param {?proto.zhst.SearchPlayback|undefined} value
 * @return {!proto.zhst.DescribeSearchPlaybackResponse} returns this
*/
proto.zhst.DescribeSearchPlaybackResponse.prototype.setSearchPlayback = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.DescribeSearchPlaybackResponse} returns this
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.clearSearchPlayback = function() {
  return this.setSearchPlayback(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.DescribeSearchPlaybackResponse.prototype.hasSearchPlayback = function() {
  return jspb.Message.getField(this, 3) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ListSearchPlaybacksRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ListSearchPlaybacksRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ListSearchPlaybacksRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListSearchPlaybacksRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    maxResults: jspb.Message.getFieldWithDefault(msg, 1, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 2, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ListSearchPlaybacksRequest}
 */
proto.zhst.ListSearchPlaybacksRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ListSearchPlaybacksRequest;
  return proto.zhst.ListSearchPlaybacksRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ListSearchPlaybacksRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ListSearchPlaybacksRequest}
 */
proto.zhst.ListSearchPlaybacksRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxResults(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ListSearchPlaybacksRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ListSearchPlaybacksRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ListSearchPlaybacksRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListSearchPlaybacksRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMaxResults();
  if (f !== 0) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
};


/**
 * optional uint32 max_results = 1;
 * @return {number}
 */
proto.zhst.ListSearchPlaybacksRequest.prototype.getMaxResults = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.ListSearchPlaybacksRequest} returns this
 */
proto.zhst.ListSearchPlaybacksRequest.prototype.setMaxResults = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional string next_token = 2;
 * @return {string}
 */
proto.zhst.ListSearchPlaybacksRequest.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListSearchPlaybacksRequest} returns this
 */
proto.zhst.ListSearchPlaybacksRequest.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.zhst.ListSearchPlaybacksResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.zhst.ListSearchPlaybacksResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.zhst.ListSearchPlaybacksResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListSearchPlaybacksResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    searchPlaybacksList: jspb.Message.toObjectList(msg.getSearchPlaybacksList(),
    proto.zhst.SearchPlayback.toObject, includeInstance),
    totalCount: jspb.Message.getFieldWithDefault(msg, 4, 0),
    nextToken: jspb.Message.getFieldWithDefault(msg, 5, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.zhst.ListSearchPlaybacksResponse}
 */
proto.zhst.ListSearchPlaybacksResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.zhst.ListSearchPlaybacksResponse;
  return proto.zhst.ListSearchPlaybacksResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.zhst.ListSearchPlaybacksResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.zhst.ListSearchPlaybacksResponse}
 */
proto.zhst.ListSearchPlaybacksResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.zhst.SearchPlayback;
      reader.readMessage(value,proto.zhst.SearchPlayback.deserializeBinaryFromReader);
      msg.addSearchPlaybacks(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTotalCount(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setNextToken(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.zhst.ListSearchPlaybacksResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.zhst.ListSearchPlaybacksResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.zhst.ListSearchPlaybacksResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getSearchPlaybacksList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.zhst.SearchPlayback.serializeBinaryToWriter
    );
  }
  f = message.getTotalCount();
  if (f !== 0) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getNextToken();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
*/
proto.zhst.ListSearchPlaybacksResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SearchPlayback search_playbacks = 3;
 * @return {!Array<!proto.zhst.SearchPlayback>}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.getSearchPlaybacksList = function() {
  return /** @type{!Array<!proto.zhst.SearchPlayback>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.zhst.SearchPlayback, 3));
};


/**
 * @param {!Array<!proto.zhst.SearchPlayback>} value
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
*/
proto.zhst.ListSearchPlaybacksResponse.prototype.setSearchPlaybacksList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.zhst.SearchPlayback=} opt_value
 * @param {number=} opt_index
 * @return {!proto.zhst.SearchPlayback}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.addSearchPlaybacks = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.zhst.SearchPlayback, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.clearSearchPlaybacksList = function() {
  return this.setSearchPlaybacksList([]);
};


/**
 * optional uint64 total_count = 4;
 * @return {number}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.getTotalCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {number} value
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.setTotalCount = function(value) {
  return jspb.Message.setProto3IntField(this, 4, value);
};


/**
 * optional string next_token = 5;
 * @return {string}
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.getNextToken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.zhst.ListSearchPlaybacksResponse} returns this
 */
proto.zhst.ListSearchPlaybacksResponse.prototype.setNextToken = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


goog.object.extend(exports, proto.zhst);
