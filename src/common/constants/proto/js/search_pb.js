// source: search.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var common_pb = require('./common_pb.js');
goog.object.extend(proto, common_pb);
goog.exportSymbol('proto.search.CacheSearchingTargetRequest', null, global);
goog.exportSymbol('proto.search.CacheSearchingTargetResponse', null, global);
goog.exportSymbol('proto.search.FeatureInfo', null, global);
goog.exportSymbol('proto.search.ResultExtendedInfo', null, global);
goog.exportSymbol('proto.search.SearchCondition', null, global);
goog.exportSymbol('proto.search.SearchRequest', null, global);
goog.exportSymbol('proto.search.SearchResponse', null, global);
goog.exportSymbol('proto.search.SearchResult', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.FeatureInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.FeatureInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.FeatureInfo.displayName = 'proto.search.FeatureInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.SearchCondition = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.SearchCondition, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.SearchCondition.displayName = 'proto.search.SearchCondition';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.search.SearchRequest.repeatedFields_, null);
};
goog.inherits(proto.search.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.SearchRequest.displayName = 'proto.search.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.ResultExtendedInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.ResultExtendedInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.ResultExtendedInfo.displayName = 'proto.search.ResultExtendedInfo';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.SearchResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.SearchResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.SearchResult.displayName = 'proto.search.SearchResult';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.search.SearchResponse.repeatedFields_, null);
};
goog.inherits(proto.search.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.SearchResponse.displayName = 'proto.search.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.CacheSearchingTargetRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.search.CacheSearchingTargetRequest.repeatedFields_, null);
};
goog.inherits(proto.search.CacheSearchingTargetRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.CacheSearchingTargetRequest.displayName = 'proto.search.CacheSearchingTargetRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.search.CacheSearchingTargetResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.search.CacheSearchingTargetResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.search.CacheSearchingTargetResponse.displayName = 'proto.search.CacheSearchingTargetResponse';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.FeatureInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.search.FeatureInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.FeatureInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.FeatureInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    featureId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.FeatureInfo}
 */
proto.search.FeatureInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.FeatureInfo;
  return proto.search.FeatureInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.FeatureInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.FeatureInfo}
 */
proto.search.FeatureInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeatureId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.FeatureInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.FeatureInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.FeatureInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.FeatureInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getFeatureId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.search.FeatureInfo.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.FeatureInfo} returns this
 */
proto.search.FeatureInfo.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 feature_id = 2;
 * @return {number}
 */
proto.search.FeatureInfo.prototype.getFeatureId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.FeatureInfo} returns this
 */
proto.search.FeatureInfo.prototype.setFeatureId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.SearchCondition.prototype.toObject = function(opt_includeInstance) {
  return proto.search.SearchCondition.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.SearchCondition} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchCondition.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureInfo: (f = msg.getFeatureInfo()) && proto.search.FeatureInfo.toObject(includeInstance, f),
    featureData: msg.getFeatureData_asB64(),
    imageData: msg.getImageData_asB64()
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.SearchCondition}
 */
proto.search.SearchCondition.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.SearchCondition;
  return proto.search.SearchCondition.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.SearchCondition} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.SearchCondition}
 */
proto.search.SearchCondition.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.search.FeatureInfo;
      reader.readMessage(value,proto.search.FeatureInfo.deserializeBinaryFromReader);
      msg.setFeatureInfo(value);
      break;
    case 2:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setFeatureData(value);
      break;
    case 3:
      var value = /** @type {!Uint8Array} */ (reader.readBytes());
      msg.setImageData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.SearchCondition.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.SearchCondition.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.SearchCondition} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchCondition.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureInfo();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.search.FeatureInfo.serializeBinaryToWriter
    );
  }
  f = message.getFeatureData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      2,
      f
    );
  }
  f = message.getImageData_asU8();
  if (f.length > 0) {
    writer.writeBytes(
      3,
      f
    );
  }
};


/**
 * optional FeatureInfo feature_info = 1;
 * @return {?proto.search.FeatureInfo}
 */
proto.search.SearchCondition.prototype.getFeatureInfo = function() {
  return /** @type{?proto.search.FeatureInfo} */ (
    jspb.Message.getWrapperField(this, proto.search.FeatureInfo, 1));
};


/**
 * @param {?proto.search.FeatureInfo|undefined} value
 * @return {!proto.search.SearchCondition} returns this
*/
proto.search.SearchCondition.prototype.setFeatureInfo = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.SearchCondition} returns this
 */
proto.search.SearchCondition.prototype.clearFeatureInfo = function() {
  return this.setFeatureInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.SearchCondition.prototype.hasFeatureInfo = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bytes feature_data = 2;
 * @return {string}
 */
proto.search.SearchCondition.prototype.getFeatureData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * optional bytes feature_data = 2;
 * This is a type-conversion wrapper around `getFeatureData()`
 * @return {string}
 */
proto.search.SearchCondition.prototype.getFeatureData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getFeatureData()));
};


/**
 * optional bytes feature_data = 2;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getFeatureData()`
 * @return {!Uint8Array}
 */
proto.search.SearchCondition.prototype.getFeatureData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getFeatureData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.search.SearchCondition} returns this
 */
proto.search.SearchCondition.prototype.setFeatureData = function(value) {
  return jspb.Message.setProto3BytesField(this, 2, value);
};


/**
 * optional bytes image_data = 3;
 * @return {string}
 */
proto.search.SearchCondition.prototype.getImageData = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * optional bytes image_data = 3;
 * This is a type-conversion wrapper around `getImageData()`
 * @return {string}
 */
proto.search.SearchCondition.prototype.getImageData_asB64 = function() {
  return /** @type {string} */ (jspb.Message.bytesAsB64(
      this.getImageData()));
};


/**
 * optional bytes image_data = 3;
 * Note that Uint8Array is not supported on all browsers.
 * @see http://caniuse.com/Uint8Array
 * This is a type-conversion wrapper around `getImageData()`
 * @return {!Uint8Array}
 */
proto.search.SearchCondition.prototype.getImageData_asU8 = function() {
  return /** @type {!Uint8Array} */ (jspb.Message.bytesAsU8(
      this.getImageData()));
};


/**
 * @param {!(string|Uint8Array)} value
 * @return {!proto.search.SearchCondition} returns this
 */
proto.search.SearchCondition.prototype.setImageData = function(value) {
  return jspb.Message.setProto3BytesField(this, 3, value);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.search.SearchRequest.repeatedFields_ = [1,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.search.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupIdsList: (f = jspb.Message.getRepeatedField(msg, 1)) == null ? undefined : f,
    topn: jspb.Message.getFieldWithDefault(msg, 2, 0),
    conditionsList: jspb.Message.toObjectList(msg.getConditionsList(),
    proto.search.SearchCondition.toObject, includeInstance),
    threshold: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    beginTime: jspb.Message.getFieldWithDefault(msg, 5, 0),
    endTime: jspb.Message.getFieldWithDefault(msg, 6, 0),
    queryExtinfo: jspb.Message.getBooleanFieldWithDefault(msg, 7, false)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.SearchRequest}
 */
proto.search.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.SearchRequest;
  return proto.search.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.SearchRequest}
 */
proto.search.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addGroupIds(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTopn(value);
      break;
    case 3:
      var value = new proto.search.SearchCondition;
      reader.readMessage(value,proto.search.SearchCondition.deserializeBinaryFromReader);
      msg.addConditions(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setThreshold(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBeginTime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndTime(value);
      break;
    case 7:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setQueryExtinfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupIdsList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
  f = message.getTopn();
  if (f !== 0) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getConditionsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.search.SearchCondition.serializeBinaryToWriter
    );
  }
  f = message.getThreshold();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getBeginTime();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getEndTime();
  if (f !== 0) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = message.getQueryExtinfo();
  if (f) {
    writer.writeBool(
      7,
      f
    );
  }
};


/**
 * repeated string group_ids = 1;
 * @return {!Array<string>}
 */
proto.search.SearchRequest.prototype.getGroupIdsList = function() {
  return /** @type {!Array<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/**
 * @param {!Array<string>} value
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.setGroupIdsList = function(value) {
  return jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {string} value
 * @param {number=} opt_index
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.addGroupIds = function(value, opt_index) {
  return jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.clearGroupIdsList = function() {
  return this.setGroupIdsList([]);
};


/**
 * optional uint32 topn = 2;
 * @return {number}
 */
proto.search.SearchRequest.prototype.getTopn = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.setTopn = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * repeated SearchCondition conditions = 3;
 * @return {!Array<!proto.search.SearchCondition>}
 */
proto.search.SearchRequest.prototype.getConditionsList = function() {
  return /** @type{!Array<!proto.search.SearchCondition>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.search.SearchCondition, 3));
};


/**
 * @param {!Array<!proto.search.SearchCondition>} value
 * @return {!proto.search.SearchRequest} returns this
*/
proto.search.SearchRequest.prototype.setConditionsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.search.SearchCondition=} opt_value
 * @param {number=} opt_index
 * @return {!proto.search.SearchCondition}
 */
proto.search.SearchRequest.prototype.addConditions = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.search.SearchCondition, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.clearConditionsList = function() {
  return this.setConditionsList([]);
};


/**
 * optional float threshold = 4;
 * @return {number}
 */
proto.search.SearchRequest.prototype.getThreshold = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.setThreshold = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 begin_time = 5;
 * @return {number}
 */
proto.search.SearchRequest.prototype.getBeginTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.setBeginTime = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional uint32 end_time = 6;
 * @return {number}
 */
proto.search.SearchRequest.prototype.getEndTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.setEndTime = function(value) {
  return jspb.Message.setProto3IntField(this, 6, value);
};


/**
 * optional bool query_extinfo = 7;
 * @return {boolean}
 */
proto.search.SearchRequest.prototype.getQueryExtinfo = function() {
  return /** @type {boolean} */ (jspb.Message.getBooleanFieldWithDefault(this, 7, false));
};


/**
 * @param {boolean} value
 * @return {!proto.search.SearchRequest} returns this
 */
proto.search.SearchRequest.prototype.setQueryExtinfo = function(value) {
  return jspb.Message.setProto3BooleanField(this, 7, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.ResultExtendedInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.search.ResultExtendedInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.ResultExtendedInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.ResultExtendedInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    frameTimestamp: jspb.Message.getFieldWithDefault(msg, 1, 0),
    objectDetectionRect: (f = msg.getObjectDetectionRect()) && common_pb.Rect2F.toObject(includeInstance, f),
    expansionOdRect: (f = msg.getExpansionOdRect()) && common_pb.Rect2F.toObject(includeInstance, f),
    imageKey: jspb.Message.getFieldWithDefault(msg, 4, ""),
    objectType: jspb.Message.getFieldWithDefault(msg, 5, 0),
    confidence: jspb.Message.getFloatingPointFieldWithDefault(msg, 6, 0.0),
    frameExtendInfo: (f = msg.getFrameExtendInfo()) && common_pb.FrameExtendInfo.toObject(includeInstance, f),
    pedAttributes: (f = msg.getPedAttributes()) && common_pb.PedAttrubutes.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.ResultExtendedInfo}
 */
proto.search.ResultExtendedInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.ResultExtendedInfo;
  return proto.search.ResultExtendedInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.ResultExtendedInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.ResultExtendedInfo}
 */
proto.search.ResultExtendedInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFrameTimestamp(value);
      break;
    case 2:
      var value = new common_pb.Rect2F;
      reader.readMessage(value,common_pb.Rect2F.deserializeBinaryFromReader);
      msg.setObjectDetectionRect(value);
      break;
    case 3:
      var value = new common_pb.Rect2F;
      reader.readMessage(value,common_pb.Rect2F.deserializeBinaryFromReader);
      msg.setExpansionOdRect(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setImageKey(value);
      break;
    case 5:
      var value = /** @type {!proto.Common.ObjectType} */ (reader.readEnum());
      msg.setObjectType(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setConfidence(value);
      break;
    case 7:
      var value = new common_pb.FrameExtendInfo;
      reader.readMessage(value,common_pb.FrameExtendInfo.deserializeBinaryFromReader);
      msg.setFrameExtendInfo(value);
      break;
    case 8:
      var value = new common_pb.PedAttrubutes;
      reader.readMessage(value,common_pb.PedAttrubutes.deserializeBinaryFromReader);
      msg.setPedAttributes(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.ResultExtendedInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.ResultExtendedInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.ResultExtendedInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.ResultExtendedInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFrameTimestamp();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getObjectDetectionRect();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Rect2F.serializeBinaryToWriter
    );
  }
  f = message.getExpansionOdRect();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      common_pb.Rect2F.serializeBinaryToWriter
    );
  }
  f = message.getImageKey();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getObjectType();
  if (f !== 0.0) {
    writer.writeEnum(
      5,
      f
    );
  }
  f = message.getConfidence();
  if (f !== 0.0) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = message.getFrameExtendInfo();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      common_pb.FrameExtendInfo.serializeBinaryToWriter
    );
  }
  f = message.getPedAttributes();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      common_pb.PedAttrubutes.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 frame_timestamp = 1;
 * @return {number}
 */
proto.search.ResultExtendedInfo.prototype.getFrameTimestamp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.setFrameTimestamp = function(value) {
  return jspb.Message.setProto3IntField(this, 1, value);
};


/**
 * optional Common.Rect2F object_detection_rect = 2;
 * @return {?proto.Common.Rect2F}
 */
proto.search.ResultExtendedInfo.prototype.getObjectDetectionRect = function() {
  return /** @type{?proto.Common.Rect2F} */ (
    jspb.Message.getWrapperField(this, common_pb.Rect2F, 2));
};


/**
 * @param {?proto.Common.Rect2F|undefined} value
 * @return {!proto.search.ResultExtendedInfo} returns this
*/
proto.search.ResultExtendedInfo.prototype.setObjectDetectionRect = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.clearObjectDetectionRect = function() {
  return this.setObjectDetectionRect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.ResultExtendedInfo.prototype.hasObjectDetectionRect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Common.Rect2F expansion_od_rect = 3;
 * @return {?proto.Common.Rect2F}
 */
proto.search.ResultExtendedInfo.prototype.getExpansionOdRect = function() {
  return /** @type{?proto.Common.Rect2F} */ (
    jspb.Message.getWrapperField(this, common_pb.Rect2F, 3));
};


/**
 * @param {?proto.Common.Rect2F|undefined} value
 * @return {!proto.search.ResultExtendedInfo} returns this
*/
proto.search.ResultExtendedInfo.prototype.setExpansionOdRect = function(value) {
  return jspb.Message.setWrapperField(this, 3, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.clearExpansionOdRect = function() {
  return this.setExpansionOdRect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.ResultExtendedInfo.prototype.hasExpansionOdRect = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string image_key = 4;
 * @return {string}
 */
proto.search.ResultExtendedInfo.prototype.getImageKey = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.setImageKey = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional Common.ObjectType object_type = 5;
 * @return {!proto.Common.ObjectType}
 */
proto.search.ResultExtendedInfo.prototype.getObjectType = function() {
  return /** @type {!proto.Common.ObjectType} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {!proto.Common.ObjectType} value
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.setObjectType = function(value) {
  return jspb.Message.setProto3EnumField(this, 5, value);
};


/**
 * optional float confidence = 6;
 * @return {number}
 */
proto.search.ResultExtendedInfo.prototype.getConfidence = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 6, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.setConfidence = function(value) {
  return jspb.Message.setProto3FloatField(this, 6, value);
};


/**
 * optional Common.FrameExtendInfo frame_extend_info = 7;
 * @return {?proto.Common.FrameExtendInfo}
 */
proto.search.ResultExtendedInfo.prototype.getFrameExtendInfo = function() {
  return /** @type{?proto.Common.FrameExtendInfo} */ (
    jspb.Message.getWrapperField(this, common_pb.FrameExtendInfo, 7));
};


/**
 * @param {?proto.Common.FrameExtendInfo|undefined} value
 * @return {!proto.search.ResultExtendedInfo} returns this
*/
proto.search.ResultExtendedInfo.prototype.setFrameExtendInfo = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.clearFrameExtendInfo = function() {
  return this.setFrameExtendInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.ResultExtendedInfo.prototype.hasFrameExtendInfo = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional Common.PedAttrubutes ped_attributes = 8;
 * @return {?proto.Common.PedAttrubutes}
 */
proto.search.ResultExtendedInfo.prototype.getPedAttributes = function() {
  return /** @type{?proto.Common.PedAttrubutes} */ (
    jspb.Message.getWrapperField(this, common_pb.PedAttrubutes, 8));
};


/**
 * @param {?proto.Common.PedAttrubutes|undefined} value
 * @return {!proto.search.ResultExtendedInfo} returns this
*/
proto.search.ResultExtendedInfo.prototype.setPedAttributes = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.ResultExtendedInfo} returns this
 */
proto.search.ResultExtendedInfo.prototype.clearPedAttributes = function() {
  return this.setPedAttributes(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.ResultExtendedInfo.prototype.hasPedAttributes = function() {
  return jspb.Message.getField(this, 8) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.SearchResult.prototype.toObject = function(opt_includeInstance) {
  return proto.search.SearchResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.SearchResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    groupId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    objectId: jspb.Message.getFieldWithDefault(msg, 2, 0),
    featureId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    score: jspb.Message.getFloatingPointFieldWithDefault(msg, 4, 0.0),
    conditionIndex: jspb.Message.getFieldWithDefault(msg, 5, 0),
    extenedInfo: (f = msg.getExtenedInfo()) && proto.search.ResultExtendedInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.SearchResult}
 */
proto.search.SearchResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.SearchResult;
  return proto.search.SearchResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.SearchResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.SearchResult}
 */
proto.search.SearchResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGroupId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setObjectId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setFeatureId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConditionIndex(value);
      break;
    case 6:
      var value = new proto.search.ResultExtendedInfo;
      reader.readMessage(value,proto.search.ResultExtendedInfo.deserializeBinaryFromReader);
      msg.setExtenedInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.SearchResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.SearchResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.SearchResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getGroupId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getObjectId();
  if (f !== 0) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getFeatureId();
  if (f !== 0) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getScore();
  if (f !== 0.0) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = message.getConditionIndex();
  if (f !== 0) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getExtenedInfo();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.search.ResultExtendedInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional string group_id = 1;
 * @return {string}
 */
proto.search.SearchResult.prototype.getGroupId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.SearchResult} returns this
 */
proto.search.SearchResult.prototype.setGroupId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional uint64 object_id = 2;
 * @return {number}
 */
proto.search.SearchResult.prototype.getObjectId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchResult} returns this
 */
proto.search.SearchResult.prototype.setObjectId = function(value) {
  return jspb.Message.setProto3IntField(this, 2, value);
};


/**
 * optional uint64 feature_id = 3;
 * @return {number}
 */
proto.search.SearchResult.prototype.getFeatureId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchResult} returns this
 */
proto.search.SearchResult.prototype.setFeatureId = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional float score = 4;
 * @return {number}
 */
proto.search.SearchResult.prototype.getScore = function() {
  return /** @type {number} */ (jspb.Message.getFloatingPointFieldWithDefault(this, 4, 0.0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchResult} returns this
 */
proto.search.SearchResult.prototype.setScore = function(value) {
  return jspb.Message.setProto3FloatField(this, 4, value);
};


/**
 * optional uint32 condition_index = 5;
 * @return {number}
 */
proto.search.SearchResult.prototype.getConditionIndex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/**
 * @param {number} value
 * @return {!proto.search.SearchResult} returns this
 */
proto.search.SearchResult.prototype.setConditionIndex = function(value) {
  return jspb.Message.setProto3IntField(this, 5, value);
};


/**
 * optional ResultExtendedInfo extened_info = 6;
 * @return {?proto.search.ResultExtendedInfo}
 */
proto.search.SearchResult.prototype.getExtenedInfo = function() {
  return /** @type{?proto.search.ResultExtendedInfo} */ (
    jspb.Message.getWrapperField(this, proto.search.ResultExtendedInfo, 6));
};


/**
 * @param {?proto.search.ResultExtendedInfo|undefined} value
 * @return {!proto.search.SearchResult} returns this
*/
proto.search.SearchResult.prototype.setExtenedInfo = function(value) {
  return jspb.Message.setWrapperField(this, 6, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.SearchResult} returns this
 */
proto.search.SearchResult.prototype.clearExtenedInfo = function() {
  return this.setExtenedInfo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.SearchResult.prototype.hasExtenedInfo = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.search.SearchResponse.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.search.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f),
    resultsList: jspb.Message.toObjectList(msg.getResultsList(),
    proto.search.SearchResult.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.SearchResponse}
 */
proto.search.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.SearchResponse;
  return proto.search.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.SearchResponse}
 */
proto.search.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    case 3:
      var value = new proto.search.SearchResult;
      reader.readMessage(value,proto.search.SearchResult.deserializeBinaryFromReader);
      msg.addResults(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
  f = message.getResultsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.search.SearchResult.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.search.SearchResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.SearchResponse} returns this
 */
proto.search.SearchResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.search.SearchResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.search.SearchResponse} returns this
*/
proto.search.SearchResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.SearchResponse} returns this
 */
proto.search.SearchResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.SearchResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated SearchResult results = 3;
 * @return {!Array<!proto.search.SearchResult>}
 */
proto.search.SearchResponse.prototype.getResultsList = function() {
  return /** @type{!Array<!proto.search.SearchResult>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.search.SearchResult, 3));
};


/**
 * @param {!Array<!proto.search.SearchResult>} value
 * @return {!proto.search.SearchResponse} returns this
*/
proto.search.SearchResponse.prototype.setResultsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.search.SearchResult=} opt_value
 * @param {number=} opt_index
 * @return {!proto.search.SearchResult}
 */
proto.search.SearchResponse.prototype.addResults = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.search.SearchResult, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.search.SearchResponse} returns this
 */
proto.search.SearchResponse.prototype.clearResultsList = function() {
  return this.setResultsList([]);
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.search.CacheSearchingTargetRequest.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.CacheSearchingTargetRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.search.CacheSearchingTargetRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.CacheSearchingTargetRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.CacheSearchingTargetRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    featureInfoList: jspb.Message.toObjectList(msg.getFeatureInfoList(),
    proto.search.FeatureInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.CacheSearchingTargetRequest}
 */
proto.search.CacheSearchingTargetRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.CacheSearchingTargetRequest;
  return proto.search.CacheSearchingTargetRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.CacheSearchingTargetRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.CacheSearchingTargetRequest}
 */
proto.search.CacheSearchingTargetRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.search.FeatureInfo;
      reader.readMessage(value,proto.search.FeatureInfo.deserializeBinaryFromReader);
      msg.addFeatureInfo(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.CacheSearchingTargetRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.CacheSearchingTargetRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.CacheSearchingTargetRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.CacheSearchingTargetRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getFeatureInfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.search.FeatureInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FeatureInfo feature_info = 1;
 * @return {!Array<!proto.search.FeatureInfo>}
 */
proto.search.CacheSearchingTargetRequest.prototype.getFeatureInfoList = function() {
  return /** @type{!Array<!proto.search.FeatureInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.search.FeatureInfo, 1));
};


/**
 * @param {!Array<!proto.search.FeatureInfo>} value
 * @return {!proto.search.CacheSearchingTargetRequest} returns this
*/
proto.search.CacheSearchingTargetRequest.prototype.setFeatureInfoList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.search.FeatureInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.search.FeatureInfo}
 */
proto.search.CacheSearchingTargetRequest.prototype.addFeatureInfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.search.FeatureInfo, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.search.CacheSearchingTargetRequest} returns this
 */
proto.search.CacheSearchingTargetRequest.prototype.clearFeatureInfoList = function() {
  return this.setFeatureInfoList([]);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.search.CacheSearchingTargetResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.search.CacheSearchingTargetResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.search.CacheSearchingTargetResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.CacheSearchingTargetResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    requestId: jspb.Message.getFieldWithDefault(msg, 1, ""),
    error: (f = msg.getError()) && common_pb.Error.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.search.CacheSearchingTargetResponse}
 */
proto.search.CacheSearchingTargetResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.search.CacheSearchingTargetResponse;
  return proto.search.CacheSearchingTargetResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.search.CacheSearchingTargetResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.search.CacheSearchingTargetResponse}
 */
proto.search.CacheSearchingTargetResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setRequestId(value);
      break;
    case 2:
      var value = new common_pb.Error;
      reader.readMessage(value,common_pb.Error.deserializeBinaryFromReader);
      msg.setError(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.search.CacheSearchingTargetResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.search.CacheSearchingTargetResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.search.CacheSearchingTargetResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.search.CacheSearchingTargetResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequestId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getError();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      common_pb.Error.serializeBinaryToWriter
    );
  }
};


/**
 * optional string request_id = 1;
 * @return {string}
 */
proto.search.CacheSearchingTargetResponse.prototype.getRequestId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.search.CacheSearchingTargetResponse} returns this
 */
proto.search.CacheSearchingTargetResponse.prototype.setRequestId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional Common.Error error = 2;
 * @return {?proto.Common.Error}
 */
proto.search.CacheSearchingTargetResponse.prototype.getError = function() {
  return /** @type{?proto.Common.Error} */ (
    jspb.Message.getWrapperField(this, common_pb.Error, 2));
};


/**
 * @param {?proto.Common.Error|undefined} value
 * @return {!proto.search.CacheSearchingTargetResponse} returns this
*/
proto.search.CacheSearchingTargetResponse.prototype.setError = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.search.CacheSearchingTargetResponse} returns this
 */
proto.search.CacheSearchingTargetResponse.prototype.clearError = function() {
  return this.setError(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.search.CacheSearchingTargetResponse.prototype.hasError = function() {
  return jspb.Message.getField(this, 2) != null;
};


goog.object.extend(exports, proto.search);
