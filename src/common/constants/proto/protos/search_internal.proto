syntax = "proto3";

import "common.proto";
import "search.proto";

package search.internal;

message SearchRequest {
    string group_id = 1;
	float threshold = 2;
	uint32 total_sum = 3;     
	uint32 begin_ts = 4;
    uint32 end_ts = 5;
    
	repeated search.SearchCondition conditions = 6;
}
	
message SearchResult {
	uint64 feature_id = 1;
	uint64 object_id = 2;
	uint32 condition_index = 3;
	float score = 4;
}
message SearchResponse {
	string request_id = 1;
	Common.Error error = 2;
	repeated SearchResult results = 3;
}

// 检索worker的状态，走消息队列来上报，topic为searchNodeHeartBeat
// 此消息的目的：
// 1. 向searchmanager暴漏ip和prot，方便管理服务进行调度
// 2. 每5秒一次心跳，确认节点的存在。
message SearchNodeHeartBeat {
	string addr = 1; // 结点的服务地址
	uint64 time = 2; // 消息产生的时间，精确到毫秒
	uint64 seq = 3; // 消息的序号，递增+1
}

service SearchService {
  // 检索接口
  rpc Search(SearchRequest) returns (SearchResponse){
  }
}
